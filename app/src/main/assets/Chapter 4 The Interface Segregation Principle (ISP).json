{
  "chapIndex": "The Interface Segregation Principle (ISP)",
  "text": "The ISP is another one of the enabling technologies supporting component substrates such as COM. Without it, components and classes would be much less useful and por-table.The essence of the principle is quite simple. If you have a class that has several cli-ents, rather than loading the class with all the methods that the clients need, create specific interfaces for each client and multiply inherit them into the classA better technique is shown in Figure 2-20. The methods needed by each client are placed in special interfaces that are specific to that client. Those interfaces are multi-ply inherited by the Service class, and implemented there.If the interface for ClientA needs to change, ClientB and ClientC will remain unaffected. They will not have to be recompiled or redeployed.What does Client Specific Mean?     The ISP does not recommend that every class that uses a service have its own special interface class that the service must inherit from. If that were the case, the service would depend upon each and every cli-ent in a bizarre and unhealthy way. Rather, clients should be categorized by their type, and interfaces for each type of client should be created.If two or more different client types need the same method, the method should be added to both of their interfaces. This is neither harmful nor confusing to the clien"
}